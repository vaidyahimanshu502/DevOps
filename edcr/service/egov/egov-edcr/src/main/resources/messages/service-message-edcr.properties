#
#    eGov  SmartCity eGovernance suite aims to improve the internal efficiency,transparency,
#    accountability and the service delivery of the government  organizations.
#
#     Copyright (C) 2018  eGovernments Foundation
#
#     The updated version of eGov suite of products as by eGovernments Foundation
#     is available at http://www.egovernments.org
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program. If not, see http://www.gnu.org/licenses/ or
#     http://www.gnu.org/licenses/gpl.html .
#
#     In addition to the terms of the GPL license to be adhered to in using this
#     program, the following additional terms are to be complied with:
#
#         1) All versions of this program, verbatim or modified must carry this
#            Legal Notice.
#            Further, all user interfaces, including but not limited to citizen facing interfaces,
#            Urban Local Bodies interfaces, dashboards, mobile applications, of the program and any
#            derived works should carry eGovernments Foundation logo on the top right corner.
#
#            For the logo, please refer http://egovernments.org/html/logo/egov_logo.png.
#            For any further queries on attribution, including queries on brand guidelines,
#            please contact contact@egovernments.org
#
#         2) Any misrepresentation of the origin of the material is prohibited. It
#            is required that all modified versions of this material be marked in
#            reasonable ways as different from the original version.
#
#         3) This license does not grant any rights to any user of the program
#            with regards to rights under trademark law for use of the trade names
#            or trademarks of eGovernments Foundation.
#
#   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
#
#

msg.error.not.defined= {0} not defined in the plan.
msg.object.defined = {0} defined in the plan.
msg.error.road.not.defined= Road type not defined. Road should be either notified or non notified road type. 
msg.result.expected.actual= {0} Expected Result {1} Actual Result {2}. \n <b>Result {3} <b>
msg.yards.not.on.boundary=Points of {0} not on {1}
msg.morethanOne.polylines.defined= {0} layer, more than one polyline defined in the plan. Expected one polyline in this layer.
msg.error.mandatory.object.not.defined=Mandatory {0} {1} is not defined or not in appropriate color in block {2}.
msg.error.mandatory.object1.not.defined=Mandatory {0} is not defined or polygon(s) are not defined appropriately.
msg.error.color.well=Wrong colour code marked for well distance for the dimension {0} 
msg.error.color.wastedisposal=Wrong colour code marked for waste disposal for the dimension {0} 

far.actual={0} So the additional fee {1}
far.expected=Should be less than {0} with additional fee of @ Rs.5000 x ({1}-{2})*{3}
far.rulename=FAR
far.description=Should be less than {0}, with additional fee of @ Rs.5000 x (FAR-{1})*PlotArea
weighted.far.expected=Should be less than {0}
weighted.far.description=Should be less than {0}, with additional fee of @ Rs.5000 x (FAR-{1})*PlotArea
weighted.far.actual={0}
coverage.actual={0}
coverage.expected=Should be less than {0} 
coverage.rulename=Coverage
coverage.description=Should be less than {0}

msg.wrong.height.defined=Height defined wrongly for {0} of block {1}, on level {2}.Total height of building {3} mts. should define at last level.
msg.height.notdefined=Height not defined for {0} of block {1}, on level {2}
 
meanofaccess.expected= Mininum {0} mtrs.
meanofaccess.actual= {0} mtrs.
 
buildingheight.actual = {0} mtrs.
buildingheight.expected= Upto {0} mtrs.
securityzone.actual = {0} mtrs.
securityzone.expected= Maximum height of {0} mtrs.

msg.sanity.dimension.desc=Sanity
msg.error.wrong.colourcode.floorarea= Wrong colour code used to define area in Layer {1}. Colour code used {0}.
msg.error.negative.builtuparea.occupancy.floor = Negative value of total builtup area is obtained for block {0} floor {1} occupancy {2}.
msg.error.negative.floorarea.occupancy.floor = Negative value of total floor area is obtained for block {0} floor {1} occupancy {2}.
msg.error.negative.existing.builtuparea.occupancy.floor = Negative value of existing builtup area is obtained for block {0} floor {1} occupancy {2}.
msg.error.negative.existing.floorarea.occupancy.floor = Negative value of existing floor area is obtained for block {0} floor {1} occupancy {2}.
msg.error.mezz.occupancy.not.defined=Color code not used to identify occupancy type for the mezzanine floor in block {0} floor {1} mezzanine {2}. 
