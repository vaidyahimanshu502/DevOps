---
openapi: 3.0.3
info:
  title: Survey Service
  description: |
    ### API specs for survey service ###
    Survey service will be used by ULB employees to create citizen surveys to make better informed decisions while issuing new policies/ feedback on existing services.`
  contact:
    name: Client Placeholder
    email: client@email.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: '1.0'
tags:
  - name: survey-controller
    description: Survey Controller
paths:
  "/egov-survey-services/egov-ss/survey/_create":
    post:
      tags:
        - survey-controller
      summary: create
      operationId: createUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/SurveyResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/egov-survey-services/egov-ss/survey/_delete":
    post:
      tags:
        - survey-controller
      summary: delete
      operationId: deleteUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/egov-survey-services/egov-ss/survey/_search":
    post:
      tags:
        - survey-controller
      summary: search
      operationId: searchUsingPOST
      parameters:
        - name: citizenId
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: isCountCall
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: limit
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: listOfSurveyIds
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: postedBy
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: status
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: tenantIds
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: title
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: uuid
          in: query
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestInfoWrapper"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/SurveyResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/egov-survey-services/egov-ss/survey/_update":
    post:
      tags:
        - survey-controller
      summary: update
      operationId: updateUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/SurveyResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/egov-survey-services/egov-ss/survey/response/_results":
    post:
      tags:
        - survey-controller
      summary: responseSubmit
      operationId: responseSubmitUsingPOST_1
      parameters:
        - name: citizenUuids
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: surveyId
          in: query
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestInfoWrapper"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/AnswerResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/egov-survey-services/egov-ss/survey/response/_submit":
    post:
      tags:
        - survey-controller
      summary: responseSubmit
      operationId: responseSubmitUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AnswerRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/AnswerResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    Answer:
      title: Answer
      type: object
      properties:
        answer:
          type: array
          items:
            type: object
        auditDetails:
          "$ref": "#/components/schemas/AuditDetails"
        citizenId:
          type: string
        questionId:
          type: string
        uuid:
          type: string
    AnswerEntity:
      title: AnswerEntity
      type: object
      properties:
        answers:
          type: array
          items:
            "$ref": "#/components/schemas/Answer"
        surveyId:
          type: string
    AnswerRequest:
      title: AnswerRequest
      type: object
      properties:
        AnswerEntity:
          "$ref": "#/components/schemas/AnswerEntity"
        RequestInfo:
          "$ref": "#/components/schemas/RequestInfo"
    AnswerResponse:
      title: AnswerResponse
      type: object
      properties:
        ResponseInfo:
          "$ref": "#/components/schemas/ResponseInfo"
        answers:
          type: array
          items:
            "$ref": "#/components/schemas/Answer"
        description:
          type: string
        surveyId:
          type: string
        tenantId:
          type: string
        title:
          type: string
    AuditDetails:
      title: AuditDetails
      type: object
      properties:
        createdBy:
          type: string
        createdTime:
          type: integer
          format: int64
        lastModifiedBy:
          type: string
        lastModifiedTime:
          type: integer
          format: int64
    Question:
      title: Question
      required:
        - questionStatement
        - type
      type: object
      properties:
        auditDetails:
          "$ref": "#/components/schemas/AuditDetails"
        options:
          type: array
          items:
            type: string
        qorder:
          type: integer
          format: int64
        questionStatement:
          type: string
        required:
          type: boolean
        status:
          type: string
        surveyId:
          type: string
        type:
          type: string
          enum:
            - CHECKBOX_ANSWER_TYPE
            - DATE_ANSWER_TYPE
            - LONG_ANSWER_TYPE
            - MULTIPLE_ANSWER_TYPE
            - SHORT_ANSWER_TYPE
            - TIME_ANSWER_TYPE
        uuid:
          type: string
    RequestInfo:
      title: RequestInfo
      type: object
      properties:
        action:
          type: string
        apiId:
          type: string
        authToken:
          type: string
        correlationId:
          type: string
        did:
          type: string
        key:
          type: string
        msgId:
          type: string
        ts:
          type: integer
          format: int64
        userInfo:
          "$ref": "#/components/schemas/User"
        ver:
          type: string
    RequestInfoWrapper:
      title: RequestInfoWrapper
      type: object
      properties:
        RequestInfo:
          "$ref": "#/components/schemas/RequestInfo"
    ResponseInfo:
      title: ResponseInfo
      type: object
      properties:
        apiId:
          type: string
        msgId:
          type: string
        resMsgId:
          type: string
        status:
          type: string
        ts:
          type: integer
          format: int64
        ver:
          type: string
    Role:
      title: Role
      type: object
      properties:
        code:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        tenantId:
          type: string
    SurveyEntity:
      title: SurveyEntity
      required:
        - questions
        - tenantIds
      type: object
      properties:
        active:
          type: boolean
        answersCount:
          type: integer
          format: int64
        auditDetails:
          "$ref": "#/components/schemas/AuditDetails"
        description:
          maxLength: 140
          minLength: 0
          type: string
        endDate:
          type: integer
          format: int64
        hasResponded:
          type: boolean
        postedBy:
          maxLength: 128
          minLength: 0
          type: string
        questions:
          type: array
          items:
            "$ref": "#/components/schemas/Question"
        startDate:
          type: integer
          format: int64
        status:
          maxLength: 128
          minLength: 0
          type: string
        tenantId:
          maxLength: 128
          minLength: 0
          type: string
        tenantIds:
          type: array
          items:
            type: string
        title:
          maxLength: 60
          minLength: 0
          type: string
        uuid:
          maxLength: 128
          minLength: 0
          type: string
    SurveyRequest:
      title: SurveyRequest
      type: object
      properties:
        RequestInfo:
          "$ref": "#/components/schemas/RequestInfo"
        SurveyEntity:
          "$ref": "#/components/schemas/SurveyEntity"
    SurveyResponse:
      title: SurveyResponse
      type: object
      properties:
        ResponseInfo:
          "$ref": "#/components/schemas/ResponseInfo"
        Surveys:
          type: array
          items:
            "$ref": "#/components/schemas/SurveyEntity"
        TotalCount:
          type: integer
          format: int32
    User:
      title: User
      type: object
      properties:
        emailId:
          type: string
        id:
          type: integer
          format: int64
        mobileNumber:
          type: string
        name:
          type: string
        roles:
          type: array
          items:
            "$ref": "#/components/schemas/Role"
        tenantId:
          type: string
        type:
          type: string
        userName:
          type: string
        uuid:
          type: string